#include <iostream>
#include <vector>
#include <chrono>

#include "../include/decoder/openpifpaf_postprocessor.hpp"
#include "../include/utils/vector_utils.hpp"

// Contains ground truth inputs:
// cif: (133, 5, 15, 21)
// caf: (160, 9, 15, 21)

#include "test_data.hpp"

using namespace std;

int main(int argc, char **argv) {
    int H = 15;
    int W = 21;

    auto started = std::chrono::high_resolution_clock::now();

    OpenpifpafPostprocessor op = OpenpifpafPostprocessor(cif, caf, H, W);
    vector<Annotation> annotations = op.process();
    for(unsigned i = 0; i < annotations.size(); i++) {
        AnnotationResult ar = annotations[i].json_data();
        cout << "Keypoints:\n"; print_vector(ar.keypoints);
        cout << "Bbox:\n"; print_vector(ar.bbox);
        cout << "Score: " << ar.score << endl;
    }

    auto done = std::chrono::high_resolution_clock::now();
    auto msec = std::chrono::duration_cast<std::chrono::milliseconds>(done-started).count();
    std::cout << "Processing time: " << msec << " msec" << std::endl;


// Expected output
//    [
//        {
//            'keypoints': [
//                 100.2, 16.81, 0.75, 101.81, 14.83, 0.72, 98.25, 15.04, 0.77, 105.13, 15.55, 0.74, 95.86,
//                 16.56, 0.56, 110.51, 26.33, 0.89, 92.14, 29.05, 0.79, 116.61, 36.83, 0.77, 88.29, 43.75,
//                 0.66, 120.82, 46.85, 0.73, 97.9, 46.12, 0.57, 110.96, 51.57, 0.8, 100.82, 52.97, 0.7,
//                 114.36, 69.14, 0.73, 107.34, 73.59, 0.58, 122.87, 91.42, 0.63, 114.39, 85.95, 0.51,
//                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                 0.0, 0.0, 96.26, 15.18, 0.73, 96.37, 16.33, 0.71, 96.54, 17.5, 0.7, 96.81,
//                 18.64, 0.74, 97.25, 19.77, 0.74, 97.84, 20.71, 0.73, 98.64, 21.56, 0.68,
//                 99.62, 22.09, 0.7, 100.75, 22.16, 0.71, 101.97, 21.64, 0.69, 102.76,
//                 20.88, 0.72, 103.45, 20.05, 0.71, 104.05, 19.18, 0.74, 104.33,
//                 17.81, 0.74, 104.48, 16.65, 0.74, 104.49, 15.71, 0.71,
//                 104.52, 14.43, 0.72, 96.99, 14.28, 0.74, 97.49,
//                 13.97, 0.73, 98.05, 13.89, 0.77, 98.64, 13.89, 0.77, 99.2, 13.92, 0.77, 100.78,
//                 13.82, 0.77, 101.42, 13.69, 0.77, 102.05, 13.58, 0.75, 102.67, 13.59, 0.75, 103.26,
//                 13.78, 0.76, 100.04, 14.85, 0.76, 100.05, 15.56, 0.77, 100.07, 16.26, 0.76, 100.08, 16.96,
//                 0.76, 99.34, 17.7, 0.74, 99.78, 17.76, 0.74, 100.21, 17.77, 0.74, 100.65, 17.65, 0.73, 101.1,
//                 17.54, 0.73, 97.55, 15.18, 0.73, 98.05, 14.95, 0.74, 98.59, 14.9, 0.75, 99.07, 15.04, 0.76,
//                 98.58, 15.21, 0.75, 98.06, 15.27, 0.73, 101.13, 14.86, 0.76, 101.64, 14.63, 0.74, 102.21,
//                 14.6, 0.74, 102.73, 14.69, 0.74, 102.23, 14.85, 0.74, 101.69, 14.92, 0.74, 98.87, 19.32,
//                 0.75, 99.41, 18.98, 0.75, 99.99, 18.75, 0.75, 100.29, 18.73, 0.74, 100.59, 18.68, 0.73, 101.24,
//                 18.78, 0.74, 101.87, 19.02, 0.75, 101.45, 19.46, 0.7, 100.95, 19.77, 0.73, 100.36, 19.92,
//                 0.74, 99.8, 19.88, 0.75, 99.31, 19.66, 0.74, 99.03, 19.33, 0.75, 99.69, 19.2, 0.74,
//                 100.34, 19.11, 0.75, 101.02, 19.04, 0.75, 101.73, 19.05, 0.75, 101.05, 19.26, 0.74,
//                 100.33, 19.38, 0.73, 99.66, 19.39, 0.74, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
//            ],
//            'bbox': [
//                84.41, 11.95, 43.27, 84.28
//            ],
//            'score': 0.665,
//            'category_id': 1
//        }
//        {
//            'keypoints': [
//                54.87, 12.37, 0.74, 56.09, 11.07, 0.84, 53.69, 10.99, 0.72, 58.1, 11.74, 0.64, 51.87, 11.61, 0.46, 61.13,
//                19.0, 0.62, 50.42, 19.77, 0.66, 69.02, 30.25, 0.59, 47.96, 30.2, 0.69, 73.37, 40.39, 0.54, 43.7, 39.25,
//                0.67, 61.48, 40.08, 0.67, 55.52, 40.64, 0.69, 53.83, 56.3, 0.65, 60.57, 57.89, 0.63, 53.19, 73.4, 0.62,
//                70.68, 70.47, 0.56, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
//                0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
//            ],
//            'bbox': [
//                40.62, 9.81, 36.0, 67.96
//            ],
//            'score': 0.436,
//            'category_id': 1
//        }
//    ]

    return 0;
}