name: Tests

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: 3.6
            torch: 1.7.1+cpu
            torchvision: 0.8.2+cpu
            torch-source: https://download.pytorch.org/whl/cpu/torch_stable.html
          - os: ubuntu-latest
            python: 3.7
            torch: 1.7.1+cpu
            torchvision: 0.8.2+cpu
            torch-source: https://download.pytorch.org/whl/torch_stable.html
          - os: ubuntu-latest
            python: 3.8
            torch: 1.7.1+cpu
            torchvision: 0.8.2+cpu
            torch-source: https://download.pytorch.org/whl/cpu/torch_stable.html
            slow: True
          - os: ubuntu-latest
            python: 3.8
            torch: 1.8.0+cpu
            torchvision: 0.9.0+cpu
            torch-source: https://download.pytorch.org/whl/torch_stable.html
          - os: macos-latest
            python: 3.7
            torch: 1.7.1
            torchvision: 0.8.2
            torch-source: https://download.pytorch.org/whl/torch_stable.html
          - os: windows-latest
            python: 3.7
            torch: 1.7.1+cpu
            torchvision: 0.8.2+cpu
            torch-source: https://download.pytorch.org/whl/torch_stable.html

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cache checkpoints and data
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache
          data-cifar10
        key: ${{ runner.os }}-${{ hashFiles('setup.py') }}
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Python version
      run: |
        python --version
    - name: Install
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install torch==${{ matrix.torch }} torchvision==${{ matrix.torchvision }} -f ${{ matrix.torch-source }}
        python -m pip install -e ".[test]"
    - name: Install for training
      if: matrix.slow
      run: python -m pip install -e ".[train]"
    - name: Install for MacOSX - libomp
      if: matrix.os == 'macos-latest'
      run: brew install libomp  # required for onnxruntime
    - name: Install for MacOSX - CoreML
      if: matrix.os == 'macos-latest'
      run: python -m pip install -e ".[coreml]"
    - name: Print environment
      run: |
        python -m pip freeze
        python --version
        python -c "import openpifpaf; print(openpifpaf.__version__)"
    - name: Lint openpifpaf
      run: |
        pylint openpifpaf --disable=fixme
    - name: Lint tests
      if: matrix.os != 'windows-latest'  # because of path separator
      run: |
        pylint tests/*.py --disable=fixme
    - name: pycodestyle openpifpaf
      run: |
        python -m pycodestyle openpifpaf
    - name: pycodestyle tests
      if: matrix.os != 'windows-latest'  # because of path separator
      run: |
        python -m pycodestyle tests/*.py
    - name: Lint and pycodestyle on notebooks
      if: matrix.slow
      run: |
        mkdir guide_py
        jupyter nbconvert --to=script --output-dir=./guide_py ./guide/*.ipynb
        pylint ./guide_py/*.py --disable=trailing-whitespace,trailing-newlines,line-too-long,pointless-statement,undefined-variable,expression-not-assigned,wrong-import-position,ungrouped-imports,wrong-import-order
        pycodestyle guide_py/*.py --ignore=W291,W391,E302,E305,E402,E501
    - name: Test
      run: |
        pytest -vv -m "not slow"
    - name: Test training
      if: matrix.slow
      run: |
        pytest -vv -s -m slow
    - name: Test notebooks
      if: matrix.slow && matrix.os != 'windows-latest'  # because of path separator
      run: |
        pytest --nbval-lax --current-env docs/predict.ipynb
    - name: Test guide (download data)
      if: matrix.slow
      run: |
        cd guide && python download_data.py && cd ..
    - name: Test guide
      if: matrix.slow
      run: |
        cd guide && pytest --nbval-lax --current-env *.ipynb && cd ..
