name: Python package

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: 3.6
            torch: 1.3.1+cpu
            torchvision: 0.4.1+cpu
            torch-source: https://download.pytorch.org/whl/cpu/torch_stable.html
          - os: ubuntu-latest
            python: 3.7
            torch: 1.4.0+cpu
            torchvision: 0.5.0+cpu
            torch-source: https://download.pytorch.org/whl/torch_stable.html
          - os: ubuntu-latest
            python: 3.8
            torch: 1.6.0+cpu
            torchvision: 0.7.0+cpu
            torch-source: https://download.pytorch.org/whl/cpu/torch_stable.html
          - os: ubuntu-latest
            python: 3.9
            torch: 1.7.0+cpu
            torchvision: 0.8.1+cpu
            torch-source: https://download.pytorch.org/whl/torch_stable.html
          - os: macos-latest
            python: 3.7
            torch: 1.6.0+cpu
            torchvision: 0.7.0+cpu
            torch-source: https://download.pytorch.org/whl/cpu/torch_stable.html
          - os: windows-latest
            python: 3.7
            torch: 1.6.0+cpu
            torchvision: 0.7.0+cpu
            torch-source: https://download.pytorch.org/whl/cpu/torch_stable.html

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Python version
      run: |
        python --version
        python3 --version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install torch==${{ matrix.torch }} torchvision==${{ matrix.torchvision }} -f ${{ matrix.torch-source }}
    - name: Print environment
      run: |
        python -m pip freeze
        python --version
        python -c "import openpifpaf; print(openpifpaf.__version__)"
    - name: Lint openpifpaf
      run: |
        pylint openpifpaf --disable=fixme
    - name: Lint tests
      run: |
        pylint tests/*.py --disable=fixme
    - name: pycodestyle openpifpaf
      run: |
        python -m pycodestyle openpifpaf
    - name: pycodestyle tests
      run: |
        python -m pycodestyle tests/*.py
    - name: Test
      run: |
        pytest -vv
    - name: Test notebooks
      run: |
        pytest --nbval-lax --current-env docs/predict.ipynb
    - name: Test guide
      run: |
        cd guide && python download_data.py && pytest --nbval-lax --current-env *.ipynb && cd ..
